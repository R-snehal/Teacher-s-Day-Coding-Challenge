#include<bits/stdc++.h>
using namespace std;
struct Segment{
    int length;
    int l, r;
    bool operator<(const Segment& other) const{
        if(length != other.length){
            return length < other.length;
        }
        return l > other.l;
    }
};
void solve(){
    int n;
    cin>>n;
    vector<int> a(n);
    priority_queue<Segment> pq;
    if(n>0){
        pq.push({n,0,n-1});
    }
    for(int i = 1; i<= n; i++){
        Segment current = pq.top();
        pq.pop();
        int l = current.l;
        int r = current.r;
        int len = current.length;
        int mid;
        if (len % 2 != 0) { 
            mid = (l + r) / 2;
        } else { 
            mid = (l + r - 1) / 2;
        }
        a[mid] = i;
        if (mid - l > 0) {
            pq.push({mid - l, l, mid - 1});
        }
        if (r - mid > 0) {
            pq.push({r - mid, mid + 1, r});
        }
    }
    for (int j = 0; j < n; ++j) {
        cout << a[j] << (j == n - 1 ? "" : " ");
    }
    cout<<endl;
}
int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
    return 0;
}
